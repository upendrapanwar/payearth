{"version":3,"file":"static/js/884.68608fd3.chunk.js","mappings":"+NAsGA,MA8FA,EA9FyBA,KACvB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,IAC/CG,GAAoBC,EAAAA,EAAAA,KACvBC,GAAUA,EAAMC,SAASH,oBAE5BI,EAAAA,GAAMC,aAENC,EAAAA,EAAAA,YAAU,KACsBC,WAC5B,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,6BAEjC,GADAC,QAAQC,IAAI,wBAAyBJ,GACjCA,EAASK,KAAKC,OAAQ,CACxB,MACMC,EADMP,EAASK,KAAKA,KACIG,KAAKC,IACjC,MAIMC,EAJeD,EAAQE,eAAeC,QAAQC,QAClD,CAACC,EAAKC,IAAWD,EAAMC,EAAOC,QAC9B,GAE+BP,EAAQE,eAAeC,QAAQK,OAChE,MAAO,CACLC,GAAIT,EAAQE,eAAeQ,IAC3BC,MAAOX,EAAQE,eAAeU,cAC9BC,KAAMb,EAAQE,eAAeW,KAC7BC,MAAOd,EAAQE,eAAeY,MAC9Bb,UAAWA,EACXc,UAAWf,EAAQE,eAAea,UAClCC,SAAUhB,EAAQE,eAAec,SAASC,UAC3C,IAEHtC,EAAYmB,GACZoB,EAAqBpB,EACvB,MACEX,EAAAA,GAAMgC,MAAM5B,EAASK,KAAKwB,QAE9B,CAAE,MAAOD,GACPhC,EAAAA,GAAMgC,MAAMA,EAAMC,SAAW,sCAC7B1B,QAAQyB,MAAMA,EAChB,GAGFE,EAAuB,GACtB,KAEHhC,EAAAA,EAAAA,YAAU,KACR,MAAMiC,EAAWC,aAAY,KAC3BL,EAAqBxC,EAAS,GAC7B,KAEH,MAAO,IAAM8C,cAAcF,EAAS,GACnC,CAAC5C,IAEJ,MAAMwC,EAAwBO,IAC5B,GAAIA,EAAYjB,OAAS,EAAG,CAC1B,MAAMkB,EAAW,IAAID,GAAaE,MAAK,IAAM,GAAMC,KAAKC,WACxD/C,EAAkB4C,EAASI,MAAM,EAAG,GACtC,GAGF,OACEC,EAAAA,EAAAA,KAAA,WAASC,UAAU,wBAAuBC,UACxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBpD,EAAe2B,OAAS,GACvBuB,EAAAA,EAAAA,KAACI,EAAAA,EAAY,CACXC,MAAM,oBACNC,UAAU,EACVC,MAAO,MAEP,MAEJP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAC3BpD,EAAe2B,OAAS,EACrB3B,EAAekB,KAAI,CAACC,EAASuC,KAC3BR,EAAAA,EAAAA,KAACS,EAAAA,EAAW,CACV5C,KAAMI,EAENyC,WAC+B,IAA7B1D,EAAkByB,QAClBzB,EAAkB2D,SAAS1C,EAAQS,KAHhCT,EAAQS,MAOjB,eAKJ,C","sources":["components/user/home/TrendingProducts.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import SectionTitle from \"./SectionTitle\";\r\n// import ProductCard from \"./../../common/ProductCard\";\r\n// import config from \"./../../../config.json\";\r\n// import axios from \"axios\";\r\n// import { toast } from \"react-toastify\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\n// var productsData = [];\r\n// const TrendingProducts = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const selectedWishItems = useSelector(\r\n//     (state) => state.wishlist.selectedWishItems\r\n//   );\r\n//   toast.configure();\r\n\r\n//   useEffect(() => {\r\n//     productsData = [];\r\n\r\n//     axios\r\n//       .get(\"front/product/trending/50\")\r\n//       .then((response) => {\r\n//         console.log('trending response----',response)\r\n//         if (response.data.status) {\r\n//           let res = response.data.data;\r\n//           res.forEach((product) => {\r\n//             const totalRatings = product.productDetails.reviews.reduce((sum, review) => sum + review.rating, 0);\r\n//             const avgRating = totalRatings / product.productDetails.reviews.length;\r\n//             productsData.push({\r\n//               id: product.productDetails._id,\r\n//               image: product.productDetails.featuredImage,\r\n//               name: product.productDetails.name,\r\n//               price: product.productDetails.price,\r\n//               avgRating: avgRating,\r\n//               isService: product.productDetails.isService,\r\n//               quantity: product.productDetails.quantity.stock_qty,\r\n//             });\r\n//           });\r\n//           setProducts(productsData);\r\n//         } else {\r\n//           toast.error(response.data.message);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         toast.error(error);\r\n//         console.log(error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <section className=\"trending_products_sec\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row\">\r\n//           <div className=\"col-sm-12\">\r\n//             {products && productsData.length ? (\r\n//               <SectionTitle\r\n//                 title=\"Trending Products\"\r\n//                 viewMore={true}\r\n//                 route={\"#\"}\r\n//               />\r\n//             ) : (\r\n//               \"\"\r\n//             )}\r\n\r\n//             <div className=\"cards_wrapper\">\r\n//               {products && productsData.length\r\n//                 ? productsData.map((product, index) => {\r\n//                     return (\r\n//                       <ProductCard\r\n//                         data={product}\r\n//                         key={index}\r\n//                         inWishList={\r\n//                           selectedWishItems.length !== 0 &&\r\n//                           selectedWishItems.includes(product.id)\r\n//                             ? true\r\n//                             : false\r\n//                         }\r\n//                       />\r\n//                     );\r\n//                   })\r\n//                 : \"\"}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default TrendingProducts;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport SectionTitle from \"./SectionTitle\";\r\nimport ProductCard from \"./../../common/ProductCard\";\r\nimport config from \"./../../../config.json\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TrendingProducts = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [randomProducts, setRandomProducts] = useState([]);\r\n  const selectedWishItems = useSelector(\r\n    (state) => state.wishlist.selectedWishItems\r\n  );\r\n  toast.configure();\r\n\r\n  useEffect(() => {\r\n    const fetchTrendingProducts = async () => {\r\n      try {\r\n        const response = await axios.get(\"front/product/trending/50\");\r\n        console.log('trending response----', response);\r\n        if (response.data.status) {\r\n          const res = response.data.data;\r\n          const formattedProducts = res.map((product) => {\r\n            const totalRatings = product.productDetails.reviews.reduce(\r\n              (sum, review) => sum + review.rating,\r\n              0\r\n            );\r\n            const avgRating = totalRatings / product.productDetails.reviews.length;\r\n            return {\r\n              id: product.productDetails._id,\r\n              image: product.productDetails.featuredImage,\r\n              name: product.productDetails.name,\r\n              price: product.productDetails.price,\r\n              avgRating: avgRating,\r\n              isService: product.productDetails.isService,\r\n              quantity: product.productDetails.quantity.stock_qty,\r\n            };\r\n          });\r\n          setProducts(formattedProducts);\r\n          updateRandomProducts(formattedProducts);\r\n        } else {\r\n          toast.error(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        toast.error(error.message || \"Failed to fetch trending products.\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchTrendingProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      updateRandomProducts(products);\r\n    }, 10000); // Change every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [products]);\r\n\r\n  const updateRandomProducts = (productList) => {\r\n    if (productList.length > 0) {\r\n      const shuffled = [...productList].sort(() => 0.5 - Math.random());\r\n      setRandomProducts(shuffled.slice(0, 4));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"trending_products_sec\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            {randomProducts.length > 0 ? (\r\n              <SectionTitle\r\n                title=\"Trending Products\"\r\n                viewMore={false}\r\n                route={\"#\"}\r\n              />\r\n            ) : null}\r\n\r\n            <div className=\"cards_wrapper\">\r\n              {randomProducts.length > 0\r\n                ? randomProducts.map((product, index) => (\r\n                    <ProductCard\r\n                      data={product}\r\n                      key={product.id}\r\n                      inWishList={\r\n                        selectedWishItems.length !== 0 &&\r\n                        selectedWishItems.includes(product.id)\r\n                      }\r\n                    />\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TrendingProducts;\r\n"],"names":["TrendingProducts","products","setProducts","useState","randomProducts","setRandomProducts","selectedWishItems","useSelector","state","wishlist","toast","configure","useEffect","async","response","axios","get","console","log","data","status","formattedProducts","map","product","avgRating","productDetails","reviews","reduce","sum","review","rating","length","id","_id","image","featuredImage","name","price","isService","quantity","stock_qty","updateRandomProducts","error","message","fetchTrendingProducts","interval","setInterval","clearInterval","productList","shuffled","sort","Math","random","slice","_jsx","className","children","_jsxs","SectionTitle","title","viewMore","route","index","ProductCard","inWishList","includes"],"sourceRoot":""}